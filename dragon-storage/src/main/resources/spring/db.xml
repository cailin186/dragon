<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:rdb="http://www.dangdang.com/schema/ddframe/rdb"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans.xsd
                        http://www.dangdang.com/schema/ddframe/rdb
                        http://www.dangdang.com/schema/ddframe/rdb/rdb.xsd">

    <bean id="propertyConfigurer-manager-db"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="order" value="1"/>
        <property name="ignoreUnresolvablePlaceholders" value="true"/>
        <property name="locations">
            <list>
                <value>classpath:mysql.properties</value>
            </list>
        </property>
    </bean>


    <bean id="dataSourceParent" class="org.apache.tomcat.jdbc.pool.DataSource" abstract="true">
        <property name="driverClassName" value="${jdbc.driverClassName}"></property>
        <!--公共配置属性-->
        <property name="maxActive" value="100"></property>
        <property name="initialSize" value="10"></property>
        <property name="minIdle" value="10"></property>
        <property name="jdbcInterceptors"
                  value="ConnectionState;StatementFinalizer;StatementDecoratorInterceptor;ResetAbandonedTimer"></property>

        <property name="testWhileIdle" value="true"></property>
        <property name="testOnBorrow" value="true"></property>
        <property name="validationQuery" value="select 1"></property>
        <property name="testOnReturn" value="false"></property>
        <property name="validationInterval" value="30000"></property>
        <property name="timeBetweenEvictionRunsMillis" value="5000"></property>
        <property name="maxWait" value="15000"></property>
        <property name="removeAbandoned" value="true"></property>
        <property name="removeAbandonedTimeout" value="60"></property>
        <property name="logAbandoned" value="false"></property>
        <property name="minEvictableIdleTimeMillis" value="30"></property>
    </bean>


    <bean id="ds_0_master" class="org.apache.tomcat.jdbc.pool.DataSource" parent="dataSourceParent">
        <property name="url" value="${ds0.master.url}"></property>
        <property name="username" value="${ds0.master.username}"></property>
        <property name="password" value="${ds0.master.password}"></property>
    </bean>
    <bean id="ds_0_slave_0" class="org.apache.tomcat.jdbc.pool.DataSource"
          parent="dataSourceParent">
        <property name="url" value="${ds0.slave.url}"></property>
        <property name="username" value="${ds0.slave.username}"></property>
        <property name="password" value="${ds0.slave.password}"></property>
    </bean>
    <bean id="ds_1_master" class="org.apache.tomcat.jdbc.pool.DataSource" parent="dataSourceParent">
        <property name="url" value="${ds1.master.url}"></property>
        <property name="username" value="${ds1.master.username}"></property>
        <property name="password" value="${ds1.master.password}"></property>
    </bean>
    <bean id="ds_1_slave_0" class="org.apache.tomcat.jdbc.pool.DataSource"
          parent="dataSourceParent">
        <property name="url" value="${ds1.slave.url}"></property>
        <property name="username" value="${ds1.slave.username}"></property>
        <property name="password" value="${ds1.slave.password}"></property>
    </bean>
    <bean id="ds_2_master" class="org.apache.tomcat.jdbc.pool.DataSource" parent="dataSourceParent">
        <property name="url" value="${ds2.master.url}"></property>
        <property name="username" value="${ds2.master.username}"></property>
        <property name="password" value="${ds2.master.password}"></property>
    </bean>
    <bean id="ds_2_slave_0" class="org.apache.tomcat.jdbc.pool.DataSource"
          parent="dataSourceParent">
        <property name="url" value="${ds2.slave.url}"></property>
        <property name="username" value="${ds2.slave.username}"></property>
        <property name="password" value="${ds2.slave.password}"></property>
    </bean>

    <!-- 定义读写分离数据源, 读写分离数据源实现了DataSource接口, 可直接当做数据源处理 -->
    <rdb:master-slave-data-source id="ds_0" master-data-source-ref="ds_0_master"
                                  slave-data-sources-ref="ds_0_slave_0"/>
    <rdb:master-slave-data-source id="ds_1" master-data-source-ref="ds_1_master"
                                  slave-data-sources-ref="ds_1_slave_0"/>
    <rdb:master-slave-data-source id="ds_2" master-data-source-ref="ds_2_master"
                                  slave-data-sources-ref="ds_2_slave_0"/>


    <rdb:strategy id="databaseShardingStrategy" sharding-columns="traceId"
                  algorithm-class="info.yangguo.dragon.storage.mysql.algorithm.SingleKeyModuloDatabaseShardingAlgorithm"/>
    <rdb:strategy id="tableShardingStrategy" sharding-columns="traceId"
                  algorithm-class="info.yangguo.dragon.storage.mysql.algorithm.SingleKeyModuloTableShardingAlgorithm"/>

    <rdb:data-source id="shardingDataSource">
        <rdb:sharding-rule data-sources="ds_0,ds_1,ds_2">
            <rdb:table-rules>
                <rdb:table-rule logic-table="trace" actual-tables="trace${0..9}"
                                database-strategy="databaseShardingStrategy"
                                table-strategy="tableShardingStrategy"/>
                <rdb:table-rule logic-table="span" actual-tables="span${0..9}"
                                database-strategy="databaseShardingStrategy"
                                table-strategy="tableShardingStrategy"/>
                <rdb:table-rule logic-table="annotation" actual-tables="annotation${0..9}"
                                database-strategy="databaseShardingStrategy"
                                table-strategy="tableShardingStrategy"/>
            </rdb:table-rules>
        </rdb:sharding-rule>
    </rdb:data-source>


    <bean id="sqlSessionFactoryBean1" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="ds_0_master"/>
        <property name="configLocation" value="classpath:mybatis/mybatis-config1.xml"/>
    </bean>
    <bean id="sqlSessionFactoryBean2" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="shardingDataSource"/>
        <property name="configLocation" value="classpath:mybatis/mybatis-config2.xml"/>
    </bean>

    <bean id="sqlSessionTemplate1" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg index="0" ref="sqlSessionFactoryBean1"/>
    </bean>

    <bean id="sqlSessionTemplate2" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg index="0" ref="sqlSessionFactoryBean2"/>
    </bean>

    <bean id="serviceMapper" class="info.yangguo.dragon.storage.mysql.dao.impl.ServiceMapperImpl">
        <property name="sqlSession" ref="sqlSessionTemplate1"/>
    </bean>
    <bean id="annotationMapper"
          class="info.yangguo.dragon.storage.mysql.dao.impl.AnnotationMapperImpl">
        <property name="sqlSession" ref="sqlSessionTemplate2"/>
    </bean>
    <bean id="spanMapper" class="info.yangguo.dragon.storage.mysql.dao.impl.SpanMapperImpl">
        <property name="sqlSession" ref="sqlSessionTemplate2"/>
    </bean>
    <bean id="traceMapper" class="info.yangguo.dragon.storage.mysql.dao.impl.TraceMapperImpl">
        <property name="sqlSession" ref="sqlSessionTemplate2"/>
    </bean>
</beans>